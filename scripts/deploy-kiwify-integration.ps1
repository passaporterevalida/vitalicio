# Script de Deploy da Integra√ß√£o Kiwify + RevalidaQuest
# Este script automatiza o deploy da integra√ß√£o webhook

Write-Host "üöÄ Iniciando Deploy da Integra√ß√£o Kiwify + RevalidaQuest" -ForegroundColor Green
Write-Host ""

# Verificar se o Supabase CLI est√° instalado
try {
    $supabaseVersion = supabase --version
    Write-Host "‚úÖ Supabase CLI encontrado: $supabaseVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Supabase CLI n√£o encontrado. Instalando..." -ForegroundColor Red
    Write-Host "Por favor, instale o Supabase CLI primeiro:" -ForegroundColor Yellow
    Write-Host "https://supabase.com/docs/guides/cli" -ForegroundColor Cyan
    exit 1
}

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path "supabase/config.toml")) {
    Write-Host "‚ùå Arquivo supabase/config.toml n√£o encontrado." -ForegroundColor Red
    Write-Host "Execute este script na raiz do projeto RevalidaQuest." -ForegroundColor Yellow
    exit 1
}

Write-Host "üìÅ Diret√≥rio do projeto verificado" -ForegroundColor Green

# Deploy das fun√ß√µes Supabase
Write-Host ""
Write-Host "üîß Deployando fun√ß√µes Supabase..." -ForegroundColor Blue

# Deploy da fun√ß√£o validate-email
Write-Host "  üì§ Deployando validate-email..." -ForegroundColor Yellow
try {
    supabase functions deploy validate-email
    Write-Host "  ‚úÖ validate-email deployada com sucesso" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Erro ao deployar validate-email" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

# Deploy da fun√ß√£o kiwify-webhook
Write-Host "  üì§ Deployando kiwify-webhook..." -ForegroundColor Yellow
try {
    supabase functions deploy kiwify-webhook
    Write-Host "  ‚úÖ kiwify-webhook deployada com sucesso" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå Erro ao deployar kiwify-webhook" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

# Aplicar migra√ß√µes do banco de dados
Write-Host ""
Write-Host "üóÑÔ∏è Aplicando migra√ß√µes do banco de dados..." -ForegroundColor Blue

try {
    supabase db push
    Write-Host "‚úÖ Migra√ß√µes aplicadas com sucesso" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao aplicar migra√ß√µes" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

# Obter URLs das fun√ß√µes
Write-Host ""
Write-Host "üîó URLs das fun√ß√µes deployadas:" -ForegroundColor Blue

try {
    $projectUrl = supabase status --output json | ConvertFrom-Json | Select-Object -ExpandProperty API
    Write-Host "  üåê URL Base: $projectUrl" -ForegroundColor Cyan
    Write-Host "  üìß Validate Email: $projectUrl/functions/v1/validate-email" -ForegroundColor Cyan
    Write-Host "  üîó Kiwify Webhook: $projectUrl/functions/v1/kiwify-webhook" -ForegroundColor Cyan
} catch {
    Write-Host "  ‚ö†Ô∏è N√£o foi poss√≠vel obter as URLs automaticamente" -ForegroundColor Yellow
    Write-Host "  Verifique no painel do Supabase Dashboard" -ForegroundColor Yellow
}

# Instru√ß√µes de configura√ß√£o
Write-Host ""
Write-Host "üìã PR√ìXIMOS PASSOS:" -ForegroundColor Green
Write-Host ""
Write-Host "1. üåê Acesse o painel da Kiwify:" -ForegroundColor Yellow
Write-Host "   https://app.kiwify.com.br/dashboard" -ForegroundColor Cyan
Write-Host ""
Write-Host "2. ‚öôÔ∏è Configure o Webhook:" -ForegroundColor Yellow
Write-Host "   - V√° em Configura√ß√µes > Webhooks" -ForegroundColor White
Write-Host "   - Adicione a URL: [URL_BASE]/functions/v1/kiwify-webhook" -ForegroundColor White
Write-Host "   - Evento: purchase.completed" -ForegroundColor White
Write-Host ""
Write-Host "3. üß™ Teste a integra√ß√£o:" -ForegroundColor Yellow
Write-Host "   - Fa√ßa uma compra de teste do Passaporte Revalida" -ForegroundColor White
Write-Host "   - Verifique se o e-mail foi autorizado automaticamente" -ForegroundColor White
Write-Host ""
Write-Host "4. üìä Monitore no painel admin:" -ForegroundColor Yellow
Write-Host "   - Acesse: http://localhost:3000/admin" -ForegroundColor White
Write-Host "   - Verifique a aba 'Tentativas de Acesso'" -ForegroundColor White
Write-Host ""

# Verificar se o projeto est√° rodando
Write-Host "üîç Verificando se o projeto est√° rodando..." -ForegroundColor Blue
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5 -UseBasicParsing
    Write-Host "‚úÖ Projeto rodando em http://localhost:3000" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Projeto n√£o est√° rodando em http://localhost:3000" -ForegroundColor Yellow
    Write-Host "Execute: npm run dev" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "üéâ Deploy da integra√ß√£o conclu√≠do!" -ForegroundColor Green
Write-Host "Agora configure o webhook na Kiwify e teste a integra√ß√£o." -ForegroundColor White 